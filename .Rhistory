pred.vec = validate.predict.accuracy(grid.ind, ahead, 1)
max.value = max(validate.mat.list[[3]][grid.ind,])
#set up the plot
plot.new()
plot.window(xlim=c(1,50), ylim=c(0,1.1*max.value))
#--------------------------------------------------------------------------------------
#plot twitter validated data(by 1 hour)
lines(1:pred.len,pred.vec[1,1:pred.len],col="blue")
#plot twitter predicted data(by 1 hour)
twit.single = predict.single.value(mix.mat.list[[1]][grid.ind,], validate.mat.list[[1]][grid.ind,], pred.len, 4)
lines(1:pred.len,twit.single,lty=5,col="blue")
#--------------------------------------------------------------------------------------
#plot bicycle validated data(1 by 1 hour)
lines(1:pred.len, pred.vec[2,1:pred.len],col="red")
#plot bicycle predicted data(1 by 1 hour)
bike.single = predict.single.value(mix.mat.list[[2]][grid.ind,], validate.mat.list[[2]][grid.ind,], pred.len, 4)
lines(1:pred.len, bike.single,lty=5,col="red")
#--------------------------------------------------------------------------------------
#plot taxi validated data(1 by 1 hour)
lines(1:pred.len,pred.vec[3,1:pred.len],col=33)
#plot taxi predicted data(1 by 1 hour)
taxi.single = predict.single.value(mix.mat.list[[3]][grid.ind,], validate.mat.list[[3]][grid.ind,], pred.len, 4)
lines(1:pred.len,taxi.single,lty=5,col=33)
interval = 24
time.seq = seq(from=1,to=pred.len,by=interval)
btime = strptime("2013-09-01 00:00:00","%Y-%m-%d %H:%M:%S",tz="America/New_York")
train.period = 24*57
valid.btime = (btime + train.period * as.difftime("01:00:00","%H:%M:%S"))
valid.time.list = gen.workday.time.list(valid.btime,pred.len)
labels.time.vec = gen.workday.time.vec(valid.time.list[[1]], pred.len, interval)
axis(1,at=time.seq,labels=labels.time.vec)
axis(2)
title(main="The Prediction For Different Data Sources",xlab="time",ylab="# of people")
legend("topright",c("taxi","bicycle","twitter","multiple_source","single_source"),col=c(33,"red","blue",33,33), lty=c(1,1,1,1,5),cex=0.6,x.intersp=0.3,ncol=2)
}
pred.vec = validate.predict.accuracy(4, 48, 1)
pred.vec
plot.predict.result <- function(grid.ind, ahead){
#prev.len = 0
pred.len = ahead
#var prediction
pred.list = var.predict.grid.dynamic(grid.ind, ahead, 1)
max.value = max(validate.mat.list[[3]][grid.ind,])
#set up the plot
plot.new()
plot.window(xlim=c(1,50), ylim=c(0,1.1*max.value))
#--------------------------------------------------------------------------------------
#plot twitter validated data(by 1 hour)
lines(1:pred.len,pred.list[[1]][1:pred.len],col="blue")
#plot twitter predicted data(by 1 hour)
twit.single = predict.single.value(mix.mat.list[[1]][grid.ind,], validate.mat.list[[1]][grid.ind,], pred.len, 4)
lines(1:pred.len,twit.single,lty=5,col="blue")
#--------------------------------------------------------------------------------------
#plot bicycle validated data(1 by 1 hour)
lines(1:pred.len, pred.list[[2]][1:pred.len],col="red")
#plot bicycle predicted data(1 by 1 hour)
bike.single = predict.single.value(mix.mat.list[[2]][grid.ind,], validate.mat.list[[2]][grid.ind,], pred.len, 4)
lines(1:pred.len, bike.single,lty=5,col="red")
#--------------------------------------------------------------------------------------
#plot taxi validated data(1 by 1 hour)
lines(1:pred.len,pred.list[[3]][1:pred.len],col=33)
#plot taxi predicted data(1 by 1 hour)
taxi.single = predict.single.value(mix.mat.list[[3]][grid.ind,], validate.mat.list[[3]][grid.ind,], pred.len, 4)
lines(1:pred.len,taxi.single,lty=5,col=33)
interval = 24
time.seq = seq(from=1,to=pred.len,by=interval)
btime = strptime("2013-09-01 00:00:00","%Y-%m-%d %H:%M:%S",tz="America/New_York")
train.period = 24*57
valid.btime = (btime + train.period * as.difftime("01:00:00","%H:%M:%S"))
valid.time.list = gen.workday.time.list(valid.btime,pred.len)
labels.time.vec = gen.workday.time.vec(valid.time.list[[1]], pred.len, interval)
axis(1,at=time.seq,labels=labels.time.vec)
axis(2)
title(main="The Prediction For Different Data Sources",xlab="time",ylab="# of people")
legend("topright",c("taxi","bicycle","twitter","multiple_source","single_source"),col=c(33,"red","blue",33,33), lty=c(1,1,1,1,5),cex=0.6,x.intersp=0.3,ncol=2)
}
plot.predict.result(5,24)
plot.predict.result <- function(grid.ind, ahead){
#prev.len = 0
pred.len = ahead
#var prediction
pred.list = var.predict.grid.dynamic(grid.ind, ahead, 1)
max.value = max(validate.mat.list[[3]][grid.ind,])
#set up the plot
plot.new()
plot.window(xlim=c(1,50), ylim=c(0,1.1*max.value))
#--------------------------------------------------------------------------------------
#plot twitter validated data(by 1 hour)
lines(1:pred.len,pred.list[[1]][1:pred.len],col="blue")
#plot twitter predicted data(by 1 hour)
#twit.single = predict.single.value(mix.mat.list[[1]][grid.ind,], validate.mat.list[[1]][grid.ind,], pred.len, 4)
#lines(1:pred.len,twit.single,lty=5,col="blue")
#--------------------------------------------------------------------------------------
#plot bicycle validated data(1 by 1 hour)
lines(1:pred.len, pred.list[[2]][1:pred.len],col="red")
#plot bicycle predicted data(1 by 1 hour)
#bike.single = predict.single.value(mix.mat.list[[2]][grid.ind,], validate.mat.list[[2]][grid.ind,], pred.len, 4)
#lines(1:pred.len, bike.single,lty=5,col="red")
#--------------------------------------------------------------------------------------
#plot taxi validated data(1 by 1 hour)
lines(1:pred.len,pred.list[[3]][1:pred.len],col=33)
#plot taxi predicted data(1 by 1 hour)
#taxi.single = predict.single.value(mix.mat.list[[3]][grid.ind,], validate.mat.list[[3]][grid.ind,], pred.len, 4)
#lines(1:pred.len,taxi.single,lty=5,col=33)
interval = 24
time.seq = seq(from=1,to=pred.len,by=interval)
btime = strptime("2013-09-01 00:00:00","%Y-%m-%d %H:%M:%S",tz="America/New_York")
train.period = 24*57
valid.btime = (btime + train.period * as.difftime("01:00:00","%H:%M:%S"))
valid.time.list = gen.workday.time.list(valid.btime,pred.len)
labels.time.vec = gen.workday.time.vec(valid.time.list[[1]], pred.len, interval)
axis(1,at=time.seq,labels=labels.time.vec)
axis(2)
title(main="The Prediction For Different Data Sources",xlab="time",ylab="# of people")
legend("topleft",c("taxi","bicycle","twitter","multiple_source","single_source"),col=c(33,"red","blue",33,33), lty=c(1,1,1,1,5),cex=0.6,x.intersp=0.3,ncol=2)
}
plot.predict.result(2,24)
plot.predict.result <- function(grid.ind, ahead){
#prev.len = 0
pred.len = ahead
#var prediction
pred.list = var.predict.grid.dynamic(grid.ind, ahead, 1)
max.value = max(validate.mat.list[[3]][grid.ind,])
#set up the plot
plot.new()
plot.window(xlim=c(1,50), ylim=c(0,1.1*max.value))
#--------------------------------------------------------------------------------------
#plot twitter validated data(by 1 hour)
lines(1:pred.len,pred.list[[1]][grid.ind,1:pred.len],col="blue")
#plot twitter predicted data(by 1 hour)
#twit.single = predict.single.value(mix.mat.list[[1]][grid.ind,], validate.mat.list[[1]][grid.ind,], pred.len, 4)
#lines(1:pred.len,twit.single,lty=5,col="blue")
#--------------------------------------------------------------------------------------
#plot bicycle validated data(1 by 1 hour)
lines(1:pred.len, pred.list[[2]][grid.ind,1:pred.len],col="red")
#plot bicycle predicted data(1 by 1 hour)
#bike.single = predict.single.value(mix.mat.list[[2]][grid.ind,], validate.mat.list[[2]][grid.ind,], pred.len, 4)
#lines(1:pred.len, bike.single,lty=5,col="red")
#--------------------------------------------------------------------------------------
#plot taxi validated data(1 by 1 hour)
lines(1:pred.len,pred.list[[3]][grid.ind,1:pred.len],col=33)
#plot taxi predicted data(1 by 1 hour)
#taxi.single = predict.single.value(mix.mat.list[[3]][grid.ind,], validate.mat.list[[3]][grid.ind,], pred.len, 4)
#lines(1:pred.len,taxi.single,lty=5,col=33)
interval = 24
time.seq = seq(from=1,to=pred.len,by=interval)
btime = strptime("2013-09-01 00:00:00","%Y-%m-%d %H:%M:%S",tz="America/New_York")
train.period = 24*57
valid.btime = (btime + train.period * as.difftime("01:00:00","%H:%M:%S"))
valid.time.list = gen.workday.time.list(valid.btime,pred.len)
labels.time.vec = gen.workday.time.vec(valid.time.list[[1]], pred.len, interval)
axis(1,at=time.seq,labels=labels.time.vec)
axis(2)
title(main="The Prediction For Different Data Sources",xlab="time",ylab="# of people")
legend("topleft",c("taxi","bicycle","twitter","multiple_source","single_source"),col=c(33,"red","blue",33,33), lty=c(1,1,1,1,5),cex=0.6,x.intersp=0.3,ncol=2)
}
plot.predict.result(2,24)
plot.predict.result <- function(grid.ind, ahead){
#prev.len = 0
pred.len = ahead
#var prediction
pred.mat = var.predict.grid.dynamic(grid.ind, ahead, 1)
max.value = max(validate.mat.list[[3]][grid.ind,])
#set up the plot
plot.new()
plot.window(xlim=c(1,50), ylim=c(0,1.1*max.value))
#--------------------------------------------------------------------------------------
#plot twitter validated data(by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,1],col="blue")
#plot twitter predicted data(by 1 hour)
#twit.single = predict.single.value(mix.mat.list[[1]][grid.ind,], validate.mat.list[[1]][grid.ind,], pred.len, 4)
#lines(1:pred.len,twit.single,lty=5,col="blue")
#--------------------------------------------------------------------------------------
#plot bicycle validated data(1 by 1 hour)
lines(1:pred.len, pred.mat[1:pred.len,2],col="red")
#plot bicycle predicted data(1 by 1 hour)
#bike.single = predict.single.value(mix.mat.list[[2]][grid.ind,], validate.mat.list[[2]][grid.ind,], pred.len, 4)
#lines(1:pred.len, bike.single,lty=5,col="red")
#--------------------------------------------------------------------------------------
#plot taxi validated data(1 by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,3],col=33)
#plot taxi predicted data(1 by 1 hour)
#taxi.single = predict.single.value(mix.mat.list[[3]][grid.ind,], validate.mat.list[[3]][grid.ind,], pred.len, 4)
#lines(1:pred.len,taxi.single,lty=5,col=33)
interval = 24
time.seq = seq(from=1,to=pred.len,by=interval)
btime = strptime("2013-09-01 00:00:00","%Y-%m-%d %H:%M:%S",tz="America/New_York")
train.period = 24*57
valid.btime = (btime + train.period * as.difftime("01:00:00","%H:%M:%S"))
valid.time.list = gen.workday.time.list(valid.btime,pred.len)
labels.time.vec = gen.workday.time.vec(valid.time.list[[1]], pred.len, interval)
axis(1,at=time.seq,labels=labels.time.vec)
axis(2)
title(main="The Prediction For Different Data Sources",xlab="time",ylab="# of people")
legend("topleft",c("taxi","bicycle","twitter","multiple_source","single_source"),col=c(33,"red","blue",33,33), lty=c(1,1,1,1,5),cex=0.6,x.intersp=0.3,ncol=2)
}
plot.predict.result(3,24)
plot.predict.result(8,24)
plot.predict.result(9,24)
plot.predict.result(9,48)
plot.predict.result <- function(grid.ind, ahead){
#prev.len = 0
pred.len = ahead
#var prediction
pred.mat = var.predict.grid.dynamic(grid.ind, ahead, 1)
max.value = max(validate.mat.list[[3]][grid.ind,])
#set up the plot
plot.new()
plot.window(xlim=c(1,50), ylim=c(0,1.01*max.value))
#--------------------------------------------------------------------------------------
#plot twitter validated data(by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,1],col="blue")
#plot twitter predicted data(by 1 hour)
#twit.single = predict.single.value(mix.mat.list[[1]][grid.ind,], validate.mat.list[[1]][grid.ind,], pred.len, 4)
#lines(1:pred.len,twit.single,lty=5,col="blue")
#--------------------------------------------------------------------------------------
#plot bicycle validated data(1 by 1 hour)
lines(1:pred.len, pred.mat[1:pred.len,2],col="red")
#plot bicycle predicted data(1 by 1 hour)
#bike.single = predict.single.value(mix.mat.list[[2]][grid.ind,], validate.mat.list[[2]][grid.ind,], pred.len, 4)
#lines(1:pred.len, bike.single,lty=5,col="red")
#--------------------------------------------------------------------------------------
#plot taxi validated data(1 by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,3],col=33)
#plot taxi predicted data(1 by 1 hour)
#taxi.single = predict.single.value(mix.mat.list[[3]][grid.ind,], validate.mat.list[[3]][grid.ind,], pred.len, 4)
#lines(1:pred.len,taxi.single,lty=5,col=33)
interval = 24
time.seq = seq(from=1,to=pred.len,by=interval)
btime = strptime("2013-09-01 00:00:00","%Y-%m-%d %H:%M:%S",tz="America/New_York")
train.period = 24*57
valid.btime = (btime + train.period * as.difftime("01:00:00","%H:%M:%S"))
valid.time.list = gen.workday.time.list(valid.btime,pred.len)
labels.time.vec = gen.workday.time.vec(valid.time.list[[1]], pred.len, interval)
axis(1,at=time.seq,labels=labels.time.vec)
axis(2)
title(main="The Prediction For Different Data Sources",xlab="time",ylab="# of people")
legend("topleft",c("taxi","bicycle","twitter","multiple_source","single_source"),col=c(33,"red","blue",33,33), lty=c(1,1,1,1,5),cex=0.6,x.intersp=0.3,ncol=2)
}
plot.predict.result <- function(grid.ind, ahead){
#prev.len = 0
pred.len = ahead
#var prediction
pred.mat = var.predict.grid.dynamic(grid.ind, ahead, 1)
max.value = max(validate.mat.list[[3]][grid.ind,])
#set up the plot
plot.new()
plot.window(xlim=c(1,50), ylim=c(0,1.01*max.value))
#--------------------------------------------------------------------------------------
#plot twitter validated data(by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,1],col="blue")
#plot twitter predicted data(by 1 hour)
twit.single = predict.single.value(mix.mat.list[[1]][grid.ind,], validate.mat.list[[1]][grid.ind,], pred.len, 4)
lines(1:pred.len,twit.single,lty=5,col="blue")
#--------------------------------------------------------------------------------------
#plot bicycle validated data(1 by 1 hour)
lines(1:pred.len, pred.mat[1:pred.len,2],col="red")
#plot bicycle predicted data(1 by 1 hour)
bike.single = predict.single.value(mix.mat.list[[2]][grid.ind,], validate.mat.list[[2]][grid.ind,], pred.len, 4)
lines(1:pred.len, bike.single,lty=5,col="red")
#--------------------------------------------------------------------------------------
#plot taxi validated data(1 by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,3],col=33)
#plot taxi predicted data(1 by 1 hour)
taxi.single = predict.single.value(mix.mat.list[[3]][grid.ind,], validate.mat.list[[3]][grid.ind,], pred.len, 4)
lines(1:pred.len,taxi.single,lty=5,col=33)
interval = 24
time.seq = seq(from=1,to=pred.len,by=interval)
btime = strptime("2013-09-01 00:00:00","%Y-%m-%d %H:%M:%S",tz="America/New_York")
train.period = 24*57
valid.btime = (btime + train.period * as.difftime("01:00:00","%H:%M:%S"))
valid.time.list = gen.workday.time.list(valid.btime,pred.len)
labels.time.vec = gen.workday.time.vec(valid.time.list[[1]], pred.len, interval)
axis(1,at=time.seq,labels=labels.time.vec)
axis(2)
title(main="The Prediction For Different Data Sources",xlab="time",ylab="# of people")
legend("topleft",c("taxi","bicycle","twitter","multiple_source","single_source"),col=c(33,"red","blue",33,33), lty=c(1,1,1,1,5),cex=0.6,x.intersp=0.3,ncol=2)
}
plot.predict.result(5,48)
head(twit.valid.mat)
twit.valid.mat
plot.predict.result <- function(grid.ind, ahead){
#prev.len = 0
pred.len = ahead
#var prediction
pred.mat = var.predict.grid.dynamic(grid.ind, ahead, 1)
max.value = max(validate.mat.list[[3]][grid.ind,])
#set up the plot
plot.new()
plot.window(xlim=c(1,50), ylim=c(0,1.01*max.value))
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[1]][grid.ind,1:pred.len],col="blue")
#plot twitter validated data(by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,1],lty=3,col="blue")
#plot twitter predicted data(by 1 hour)
twit.single = predict.single.value(mix.mat.list[[1]][grid.ind,], validate.mat.list[[1]][grid.ind,], pred.len, 4)
lines(1:pred.len,twit.single,lty=5,col="blue")
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[2]][grid.ind,1:pred.len],col="blue")
#plot bicycle validated data(1 by 1 hour)
lines(1:pred.len, pred.mat[1:pred.len,2],lty=3,col="red")
#plot bicycle predicted data(1 by 1 hour)
bike.single = predict.single.value(mix.mat.list[[2]][grid.ind,], validate.mat.list[[2]][grid.ind,], pred.len, 4)
lines(1:pred.len, bike.single,lty=5,col="red")
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[3]][grid.ind,1:pred.len],col="blue")
#plot taxi validated data(1 by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,3],lyt=3,col=33)
#plot taxi predicted data(1 by 1 hour)
taxi.single = predict.single.value(mix.mat.list[[3]][grid.ind,], validate.mat.list[[3]][grid.ind,], pred.len, 4)
lines(1:pred.len,taxi.single,lty=5,col=33)
interval = 24
time.seq = seq(from=1,to=pred.len,by=interval)
btime = strptime("2013-09-01 00:00:00","%Y-%m-%d %H:%M:%S",tz="America/New_York")
train.period = 24*57
valid.btime = (btime + train.period * as.difftime("01:00:00","%H:%M:%S"))
valid.time.list = gen.workday.time.list(valid.btime,pred.len)
labels.time.vec = gen.workday.time.vec(valid.time.list[[1]], pred.len, interval)
axis(1,at=time.seq,labels=labels.time.vec)
axis(2)
title(main="Prediction For Different Data Sources",xlab="time",ylab="# of people")
legend("topleft",c("taxi","bicycle","twitter","multiple_source","single_source"),col=c(33,"red","blue",33,33), lty=c(1,1,1,1,3,5),cex=0.6,x.intersp=0.3,ncol=2)
}
plot.predict.result(5,48)
#draw polyline
plot.predict.result <- function(grid.ind, ahead){
#prev.len = 0
pred.len = ahead
#var prediction
pred.mat = var.predict.grid.dynamic(grid.ind, ahead, 1)
max.value = max(validate.mat.list[[3]][grid.ind,])
#set up the plot
plot.new()
plot.window(xlim=c(1,50), ylim=c(0,1.01*max.value))
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[1]][grid.ind,1:pred.len],col="blue")
#plot twitter validated data(by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,1],lty=3,col="blue")
#plot twitter predicted data(by 1 hour)
twit.single = predict.single.value(mix.mat.list[[1]][grid.ind,], validate.mat.list[[1]][grid.ind,], pred.len, 4)
lines(1:pred.len,twit.single,lty=5,col="blue")
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[2]][grid.ind,1:pred.len],col="blue")
#plot bicycle validated data(1 by 1 hour)
lines(1:pred.len, pred.mat[1:pred.len,2],lty=3,col="red")
#plot bicycle predicted data(1 by 1 hour)
bike.single = predict.single.value(mix.mat.list[[2]][grid.ind,], validate.mat.list[[2]][grid.ind,], pred.len, 4)
lines(1:pred.len, bike.single,lty=5,col="red")
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[3]][grid.ind,1:pred.len],col="blue")
#plot taxi validated data(1 by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,3],lty=3,col=33)
#plot taxi predicted data(1 by 1 hour)
taxi.single = predict.single.value(mix.mat.list[[3]][grid.ind,], validate.mat.list[[3]][grid.ind,], pred.len, 4)
lines(1:pred.len,taxi.single,lty=5,col=33)
interval = 24
time.seq = seq(from=1,to=pred.len,by=interval)
btime = strptime("2013-09-01 00:00:00","%Y-%m-%d %H:%M:%S",tz="America/New_York")
train.period = 24*57
valid.btime = (btime + train.period * as.difftime("01:00:00","%H:%M:%S"))
valid.time.list = gen.workday.time.list(valid.btime,pred.len)
labels.time.vec = gen.workday.time.vec(valid.time.list[[1]], pred.len, interval)
axis(1,at=time.seq,labels=labels.time.vec)
axis(2)
title(main="Prediction For Different Data Sources",xlab="time",ylab="# of people")
legend("topleft",c("taxi","bicycle","twitter","multiple_source","single_source"),col=c(33,"red","blue",33,33), lty=c(1,1,1,1,3,5),cex=0.6,x.intersp=0.3,ncol=2)
}
plot.predict.result <- function(grid.ind, ahead){
#prev.len = 0
pred.len = ahead
#var prediction
pred.mat = var.predict.grid.dynamic(grid.ind, ahead, 1)
max.value = max(validate.mat.list[[3]][grid.ind,])
#set up the plot
plot.new()
plot.window(xlim=c(1,50), ylim=c(0,1.01*max.value))
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[1]][grid.ind,1:pred.len],col="blue")
#plot twitter validated data(by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,1],lty=3,col="blue")
#plot twitter predicted data(by 1 hour)
twit.single = predict.single.value(mix.mat.list[[1]][grid.ind,], validate.mat.list[[1]][grid.ind,], pred.len, 4)
lines(1:pred.len,twit.single,lty=5,col="blue")
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[2]][grid.ind,1:pred.len],col="blue")
#plot bicycle validated data(1 by 1 hour)
lines(1:pred.len, pred.mat[1:pred.len,2],lty=3,col="red")
#plot bicycle predicted data(1 by 1 hour)
bike.single = predict.single.value(mix.mat.list[[2]][grid.ind,], validate.mat.list[[2]][grid.ind,], pred.len, 4)
lines(1:pred.len, bike.single,lty=5,col="red")
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[3]][grid.ind,1:pred.len],col="blue")
#plot taxi validated data(1 by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,3],lty=3,col=33)
#plot taxi predicted data(1 by 1 hour)
taxi.single = predict.single.value(mix.mat.list[[3]][grid.ind,], validate.mat.list[[3]][grid.ind,], pred.len, 4)
lines(1:pred.len,taxi.single,lty=5,col=33)
interval = 24
time.seq = seq(from=1,to=pred.len,by=interval)
btime = strptime("2013-09-01 00:00:00","%Y-%m-%d %H:%M:%S",tz="America/New_York")
train.period = 24*57
valid.btime = (btime + train.period * as.difftime("01:00:00","%H:%M:%S"))
valid.time.list = gen.workday.time.list(valid.btime,pred.len)
labels.time.vec = gen.workday.time.vec(valid.time.list[[1]], pred.len, interval)
axis(1,at=time.seq,labels=labels.time.vec)
axis(2)
title(main="Prediction For Different Data Sources",xlab="time",ylab="# of people")
legend("topleft",c("taxi","bicycle","twitter","multiple_source","single_source"),col=c(33,"red","blue",33,33), lty=c(1,1,1,1,3,5),cex=0.6,x.intersp=0.3,ncol=2)
}
plot.predict.result <- function(grid.ind, ahead){
#prev.len = 0
pred.len = ahead
#var prediction
pred.mat = var.predict.grid.dynamic(grid.ind, ahead, 1)
max.value = max(validate.mat.list[[3]][grid.ind,])
#set up the plot
plot.new()
plot.window(xlim=c(1,50), ylim=c(0,1.01*max.value))
interval = 24
time.seq = seq(from=1,to=pred.len,by=interval)
btime = strptime("2013-09-01 00:00:00","%Y-%m-%d %H:%M:%S",tz="America/New_York")
train.period = 24*57
valid.btime = (btime + train.period * as.difftime("01:00:00","%H:%M:%S"))
valid.time.list = gen.workday.time.list(valid.btime,pred.len)
labels.time.vec = gen.workday.time.vec(valid.time.list[[1]], pred.len, interval)
axis(1,at=time.seq,labels=labels.time.vec)
axis(2)
title(main="Prediction For Different Data Sources",xlab="time",ylab="# of people")
legend("topleft",c("taxi","bicycle","twitter","multiple_source","single_source"),col=c(33,"red","blue",33,33), lty=c(1,1,1,1,3,5),cex=0.6,x.intersp=0.3,ncol=2)
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[1]][grid.ind,1:pred.len],col="blue")
#plot twitter validated data(by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,1],lty=3,col="blue")
#plot twitter predicted data(by 1 hour)
twit.single = predict.single.value(mix.mat.list[[1]][grid.ind,], validate.mat.list[[1]][grid.ind,], pred.len, 4)
lines(1:pred.len,twit.single,lty=5,col="blue")
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[2]][grid.ind,1:pred.len],col="blue")
#plot bicycle validated data(1 by 1 hour)
lines(1:pred.len, pred.mat[1:pred.len,2],lty=3,col="red")
#plot bicycle predicted data(1 by 1 hour)
bike.single = predict.single.value(mix.mat.list[[2]][grid.ind,], validate.mat.list[[2]][grid.ind,], pred.len, 4)
lines(1:pred.len, bike.single,lty=5,col="red")
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[3]][grid.ind,1:pred.len],col="blue")
#plot taxi validated data(1 by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,3],lty=3,col=33)
#plot taxi predicted data(1 by 1 hour)
taxi.single = predict.single.value(mix.mat.list[[3]][grid.ind,], validate.mat.list[[3]][grid.ind,], pred.len, 4)
lines(1:pred.len,taxi.single,lty=5,col=33)
}
plot.predict.result(5,48)
plot.predict.result <- function(grid.ind, ahead){
#prev.len = 0
pred.len = ahead
#var prediction
pred.mat = var.predict.grid.dynamic(grid.ind, ahead, 1)
max.value = max(validate.mat.list[[3]][grid.ind,])
#set up the plot
plot.new()
plot.window(xlim=c(1,50), ylim=c(0,1.01*max.value))
interval = 24
time.seq = seq(from=1,to=pred.len,by=interval)
btime = strptime("2013-09-01 00:00:00","%Y-%m-%d %H:%M:%S",tz="America/New_York")
train.period = 24*57
valid.btime = (btime + train.period * as.difftime("01:00:00","%H:%M:%S"))
valid.time.list = gen.workday.time.list(valid.btime,pred.len)
labels.time.vec = gen.workday.time.vec(valid.time.list[[1]], pred.len, interval)
axis(1,at=time.seq,labels=labels.time.vec)
axis(2)
title(main="Prediction For Different Data Sources",xlab="time",ylab="# of people")
legend("topleft",c("taxi","bicycle","twitter","multiple_source","single_source"),col=c(33,"red","blue",33,33), lty=c(1,1,1,1,3,5),cex=0.6,x.intersp=0.3,ncol=2)
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[1]][grid.ind,1:pred.len],col="blue")
#plot twitter validated data(by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,1],lty=3,col="blue")
#plot twitter predicted data(by 1 hour)
twit.single = predict.single.value(mix.mat.list[[1]][grid.ind,], validate.mat.list[[1]][grid.ind,], pred.len, 4)
lines(1:pred.len,twit.single,lty=5,col="blue")
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[2]][grid.ind,1:pred.len],col="red")
#plot bicycle validated data(1 by 1 hour)
lines(1:pred.len, pred.mat[1:pred.len,2],lty=3,col="red")
#plot bicycle predicted data(1 by 1 hour)
bike.single = predict.single.value(mix.mat.list[[2]][grid.ind,], validate.mat.list[[2]][grid.ind,], pred.len, 4)
lines(1:pred.len, bike.single,lty=5,col="red")
#--------------------------------------------------------------------------------------
#plot the real value
lines(1:pred.len,validate.mat.list[[3]][grid.ind,1:pred.len])
#plot taxi validated data(1 by 1 hour)
lines(1:pred.len,pred.mat[1:pred.len,3],lty=3,col=33)
#plot taxi predicted data(1 by 1 hour)
taxi.single = predict.single.value(mix.mat.list[[3]][grid.ind,], validate.mat.list[[3]][grid.ind,], pred.len, 4)
lines(1:pred.len,taxi.single,lty=5,col=33)
}
plot.predict.result(5,48)
plot.predict.result(4,48)
plot.predict.result(4,48)
