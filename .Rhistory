}
plot.predict.result(1)
plot.predict.result <- function(grid.ind){
prev.len = 48
pred.len = 24
train.len = ncol(twit.train.mat)
#set up the plot
plot.new()
plot.window(xlim=c(1,100), ylim=c(0,1000))
#plot twitter original data source
lines(1:prev.len, twit.train.mat[grid.ind, (train.len-prev.len+1):train.len])
#plot twitter validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),twit.valid.mat[grid.ind,])
#plot bicycle original data source
lines(1:prev.len, bicycle.train.mat[grid.ind, (train.len-prev.len+1):train.len])
#plot bicycle predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), bicycle.valid.mat[grid.ind,])
#plot taxi original data source
lines(1:prev.len, taxi.train.mat[grid.ind, (train.len-prev.len+1):train.len])
#plot twitter predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),taxi.valid.mat[grid.ind,])
axis(1)
axis(2)
box()
}
twit.valid.mat = generate.validate.dataset(t_mat,btime,train.period + 1,valid.period)
bicycle.valid.mat = generate.validate.dataset(bicycle_start_sep,btime,train.period+1,valid.period)
taxi.valid.mat = generate.validate.dataset(taxi_start_sep,btime,train.period+1,valid.period)
plot.predict.result(2)
taxi.train.mat[2,450:480]
taxi.valid.mat[2,]
plot.predict.result <- function(grid.ind){
prev.len = 48
pred.len = 24
train.len = ncol(twit.train.mat)
#set up the plot
plot.new()
plot.window(xlim=c(1,100), ylim=c(0,1000))
#plot twitter original data source
lines(1:prev.len, twit.train.mat[grid.ind, (train.len-prev.len+1):train.len])
#plot twitter validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),twit.valid.mat[grid.ind,],lty=2)
#plot bicycle original data source
lines(1:prev.len, bicycle.train.mat[grid.ind, (train.len-prev.len+1):train.len])
#plot bicycle predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), bicycle.valid.mat[grid.ind,],lty=2)
#plot taxi original data source
lines(1:prev.len, taxi.train.mat[grid.ind, (train.len-prev.len+1):train.len])
#plot twitter predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),taxi.valid.mat[grid.ind,],lty=2)
axis(1)
axis(2)
box()
}
plot.predict.result(2)
plot.predict.result <- function(grid.ind){
prev.len = 48
pred.len = 24
train.len = ncol(twit.train.mat)
#set up the plot
plot.new()
plot.window(xlim=c(1,100), ylim=c(0,1000))
#plot twitter original data source
lines(1:prev.len, twit.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=2)
#plot twitter validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),twit.valid.mat[grid.ind,],lty=2,col=2)
#plot bicycle original data source
lines(1:prev.len, bicycle.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=312)
#plot bicycle predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), bicycle.valid.mat[grid.ind,],lty=2,col=312)
#plot taxi original data source
lines(1:prev.len, taxi.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=33)
#plot twitter predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),taxi.valid.mat[grid.ind,],lty=2,col=33)
axis(1)
axis(2)
box()
}
plot.predict.result(2)
plot.predict.result <- function(grid.ind){
prev.len = 48
pred.len = 24
train.len = ncol(twit.train.mat)
#set up the plot
plot.new()
plot.window(xlim=c(1,100), ylim=c(0,1000))
#plot twitter original data source
lines(1:prev.len, twit.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=461)
#plot twitter validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),twit.valid.mat[grid.ind,],lty=2,col=461)
#plot bicycle original data source
lines(1:prev.len, bicycle.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=312)
#plot bicycle predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), bicycle.valid.mat[grid.ind,],lty=2,col=312)
#plot taxi original data source
lines(1:prev.len, taxi.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=33)
#plot twitter predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),taxi.valid.mat[grid.ind,],lty=2,col=33)
axis(1)
axis(2)
box()
}
plot.predict.result(2)
plot.predict.result(2)
plot.predict.result <- function(grid.ind){
prev.len = 48
pred.len = 24
train.len = ncol(twit.train.mat)
#set up the plot
plot.new()
plot.window(xlim=c(1,100), ylim=c(0,1000))
#plot twitter original data source
lines(1:prev.len, twit.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=461)
#plot twitter validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),twit.valid.mat[grid.ind,],lty=2,col=461)
#plot bicycle original data source
lines(1:prev.len, bicycle.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=312)
#plot bicycle predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), bicycle.valid.mat[grid.ind,],lty=2,col=312)
#plot taxi original data source
lines(1:prev.len, taxi.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=533)
#plot twitter predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),taxi.valid.mat[grid.ind,],lty=2,col=533)
axis(1)
axis(2)
box()
}
plot.predict.result(2)
plot.predict.result <- function(grid.ind){
prev.len = 48
pred.len = 24
train.len = ncol(twit.train.mat)
#set up the plot
plot.new()
plot.window(xlim=c(1,100), ylim=c(0,1000))
#plot twitter original data source
lines(1:prev.len, twit.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=461)
#plot twitter validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),twit.valid.mat[grid.ind,],lty=2,col=461)
#plot bicycle original data source
lines(1:prev.len, bicycle.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=312)
#plot bicycle predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), bicycle.valid.mat[grid.ind,],lty=2,col=312)
#plot taxi original data source
lines(1:prev.len, taxi.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=33)
#plot twitter predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),taxi.valid.mat[grid.ind,],lty=2,col=33)
axis(1)
axis(2)
box()
}
plot.predict.result(2)
predict.result = var.predict.grid(2,5,2)
var.predict.grid <- function(grid.ind, ahead, by.unit){
pre.result = predict(var.list[[grid.ind]], n.ahead = ahead)
}
predict.result = var.predict.grid(2,5,2)
predict.result$fcst[[1]][1]
predict.result$fcst[[1]][2]
predict.result$fcst[[1]][3]
predict.result$fcst[[1]][4]
predict.result$fcst[[1]][5]
predict.result$fcst[[1]][6]
predict.result$fcst[[1]][7]
predict.result$fcst[[1]][8]
predict.result$fcst[[1]][9]
predict.result$fcst[[1]][10]
predict.result$fcst[[1]][11]
predict.result$fcst[[1]][12]
var.list = list()
ngrids = nrow(bicycle_start_sep)
for(i in 1:ngrids){
mix.mat = data.matrix(data.frame(twit.train.mat[i,], bicycle.train.mat[i,], taxi.train.mat[i,]))
var.list[[i]] =  VAR(mix.mat,p=24,type="const")
}
library(vars)
for(i in 1:ngrids){
mix.mat = data.matrix(data.frame(twit.train.mat[i,], bicycle.train.mat[i,], taxi.train.mat[i,]))
var.list[[i]] =  VAR(mix.mat,p=24,type="const")
}
var.list[[1]]
summary(var.list[[1]])
var.predict.grid <- function(grid.ind, ahead, by.unit){
pred.mat = matrix(nrow = 3, ncol = 0)
times = ahead / by.unit
for(i in 1:times){
pre.result = predict(var.list[[grid.ind]], n.ahead = i*by.unit)
for(j in 1:by.unit)
pred.mat = cbind(pred.mat, c(pre.result$fcst[[1]][j],pre.result$fcst[[2]][j],pre.result$fcst[[3]][j]))
}
}
var.predict.grid <- function(grid.ind, ahead, by.unit){
pred.mat = matrix(nrow = 3, ncol = 0)
times = ahead / by.unit
for(i in 1:times){
pre.result = predict(var.list[[grid.ind]], n.ahead = i*by.unit)
for(j in 1:by.unit)
pred.mat = cbind(pred.mat, c(pre.result$fcst[[1]][j],pre.result$fcst[[2]][j],pre.result$fcst[[3]][j]))
}
return (pred.mat)
}
pred.mat = var.predict.grid(2,12,1)
pred.mat
pred.mat = var.predict.grid(2,12,1)
pred.mat = var.predict.grid(2,12,2)
var.predict.grid <- function(grid.ind, ahead, by.unit){
pred.mat = matrix(nrow = 3, ncol = 0)
times = ahead / by.unit
for(i in 1:times){
pre.result = predict(var.list[[grid.ind]], n.ahead = i*by.unit)
for(j in 1:by.unit)
pred.mat = cbind(pred.mat, c(pre.result$fcst[[1]][j],pre.result$fcst[[2]][j],pre.result$fcst[[3]][j]))
}
return (pred.mat)
}
pred.mat = predict(var.list[[2]],n.ahead=2)
pred.mat
var.list[[1]]
var.list[[13]]
var.list[[12]]
predict(var.list[[3]],n.ahead=2)
predict(var.list[[3]],n.ahead=8)
predict(var.list[[3]],n.ahead=24)
pre.result$fcst[[1]][2]
pre.result$fcst[[1]][3]
pre.result$fcst[[1]][5]
pred.mat = predict(var.list[[3]],n.ahead=24)
pred.mat$fcst[[1]][5]
pred.mat$fcst[[1]][13]
pred.mat$fcst[[1]][25]
pred.mat$fcst[[1]][26]
var.predict.grid <- function(grid.ind, ahead, by.unit){
pred.mat = matrix(nrow = 3, ncol = 0)
times = ahead / by.unit
for(i in 1:times){
pre.result = predict(var.list[[grid.ind]], n.ahead = i*by.unit)
for(j in 1:by.unit)
pred.mat = cbind(pred.mat, c(pre.result$fcst[[1]][j],pre.result$fcst[[2]][j],pre.result$fcst[[3]][j]))
}
return (pred.mat)
}
pred.mat = var.predict.grid(2,24,2)
pred.mat
pred.mat = var.predict.grid(2,24,1)
pred.mat
pred.mat[which(pred.mat)<0]=0
pred.mat[which(pred.mat<0)]=0
pred.mat
var.list[[1]]
var.predict.grid <- function(grid.ind, ahead, by.unit){
pred.mat = matrix(nrow = 3, ncol = 0)
mix.mat = data.matrix(data.frame(twit.train.mat[grid.ind,], bicycle.train.mat[grid.ind,], taxi.train.mat[grid.ind,]))
times = ahead / by.unit
for(i in 1:times){
var.model = VAR(mix.mat,p=24,type="const")
pre.result = predict(var.model, n.ahead = by.unit)
for(j in 1:by.unit)
{
pred.mat = cbind(pred.mat, c(pre.result$fcst[[1]][j],pre.result$fcst[[2]][j],pre.result$fcst[[3]][j]))
mix.mat = cbind(mix.mat, twit.valid.mat[grid.ind,(i-1)*by.unit+j],bicycle.valid.mat[grid.ind,(i-1)*by.unit+j],taxi.valid.mat[grid.ind,(i-1)*by.unit+j])
}
}
return (pred.mat)
}
pred.mat = var.predict.grid(2,24,2)
pred.mat = var.predict.grid(2,24,2)
pred.mat = var.predict.grid(2,24,2)
pred.mat = var.predict.grid(2,24,2)
mix.mat
var.predict.grid <- function(grid.ind, ahead, by.unit){
pred.mat = matrix(nrow = 3, ncol = 0)
mix.mat = data.matrix(data.frame(twit.train.mat[grid.ind,], bicycle.train.mat[grid.ind,], taxi.train.mat[grid.ind,]))
times = ahead / by.unit
for(i in 1:times){
var.model = VAR(mix.mat,p=24,type="const")
pre.result = predict(var.model, n.ahead = by.unit)
for(j in 1:by.unit)
{
pred.mat = cbind(pred.mat, c(pre.result$fcst[[1]][j],pre.result$fcst[[2]][j],pre.result$fcst[[3]][j]))
mix.mat = rbind(mix.mat, twit.valid.mat[grid.ind,(i-1)*by.unit+j],bicycle.valid.mat[grid.ind,(i-1)*by.unit+j],taxi.valid.mat[grid.ind,(i-1)*by.unit+j])
}
}
return (pred.mat)
}
pred.mat = var.predict.grid(2,24,2)
pred.mat
var.predict.grid <- function(grid.ind, ahead, by.unit){
pred.mat = matrix(nrow = 3, ncol = 0)
mix.mat = data.matrix(data.frame(twit.train.mat[grid.ind,], bicycle.train.mat[grid.ind,], taxi.train.mat[grid.ind,]))
times = ahead / by.unit
for(i in 1:times){
var.model = VAR(mix.mat,p=24,type="const")
pre.result = predict(var.model, n.ahead = by.unit)
for(j in 1:by.unit)
{
pred.mat = cbind(pred.mat, c(pre.result$fcst[[1]][j],pre.result$fcst[[2]][j],pre.result$fcst[[3]][j]))
mix.mat = rbind(mix.mat, c(twit.valid.mat[grid.ind,(i-1)*by.unit+j],bicycle.valid.mat[grid.ind,(i-1)*by.unit+j],taxi.valid.mat[grid.ind,(i-1)*by.unit+j]))
}
}
return (pred.mat)
}
pred.mat
pred.mat = var.predict.grid(2,24,2)
pred.mat
plot.predict.result <- function(grid.ind){
prev.len = 48
pred.len = 24
train.len = ncol(twit.train.mat)
pred.mat = var.predict.grid(grid.ind,pred.len,1)
pred.mat[which(pred.mat) < 0] = 0
#set up the plot
plot.new()
plot.window(xlim=c(1,100), ylim=c(0,1000))
#plot twitter original data source
lines(1:prev.len, twit.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=461)
#plot twitter validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),twit.valid.mat[grid.ind,],lty=2,col=461)
#plot twitter predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),pred.mat[1,],lty=3,col=461)
#plot bicycle original data source
lines(1:prev.len, bicycle.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=312)
#plot bicycle validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), bicycle.valid.mat[grid.ind,],lty=2,col=312)
#plot bicycle predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), pred.mat[2,],lty=3,col=312)
#plot taxi original data source
lines(1:prev.len, taxi.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=33)
#plot taxi validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),taxi.valid.mat[grid.ind,],lty=2,col=33)
#plot taxi predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),pred.mat[3,],lty=3,col=33)
axis(1)
axis(2)
box()
}
plot.predict.result(2)
plot.predict.result <- function(grid.ind){
prev.len = 48
pred.len = 24
train.len = ncol(twit.train.mat)
pred.mat = var.predict.grid(grid.ind,pred.len,1)
pred.mat[which(pred.mat<0)] = 0
#set up the plot
plot.new()
plot.window(xlim=c(1,100), ylim=c(0,1000))
#plot twitter original data source
lines(1:prev.len, twit.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=461)
#plot twitter validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),twit.valid.mat[grid.ind,],lty=2,col=461)
#plot twitter predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),pred.mat[1,],lty=3,col=461)
#plot bicycle original data source
lines(1:prev.len, bicycle.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=312)
#plot bicycle validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), bicycle.valid.mat[grid.ind,],lty=2,col=312)
#plot bicycle predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), pred.mat[2,],lty=3,col=312)
#plot taxi original data source
lines(1:prev.len, taxi.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=33)
#plot taxi validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),taxi.valid.mat[grid.ind,],lty=2,col=33)
#plot taxi predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),pred.mat[3,],lty=3,col=33)
axis(1)
axis(2)
box()
}
plot.predict.result(2)
plot.predict.result(2)
var.predict.grid <- function(grid.ind, ahead, by.unit){
pred.mat = matrix(nrow = 3, ncol = 0)
mix.mat = data.matrix(data.frame(twit.train.mat[grid.ind,], bicycle.train.mat[grid.ind,], taxi.train.mat[grid.ind,]))
times = ahead / by.unit
for(i in 1:times){
var.model = VAR(mix.mat,p=24,type="const")
pre.result = predict(var.model, n.ahead = by.unit)
for(j in 1:by.unit)
{
pred.mat = cbind(pred.mat, c(pre.result$fcst[[1]][j],pre.result$fcst[[2]][j],pre.result$fcst[[3]][j]))
mix.mat = rbind(mix.mat, c(twit.valid.mat[grid.ind,(i-1)*by.unit+j],bicycle.valid.mat[grid.ind,(i-1)*by.unit+j],taxi.valid.mat[grid.ind,(i-1)*by.unit+j]))
}
}
return (pred.mat)
}
plot.predict.result <- function(grid.ind){
prev.len = 48
pred.len = 24
train.len = ncol(twit.train.mat)
pred.mat = var.predict.grid(grid.ind,pred.len,1)
pred.mat[which(pred.mat<0)] = 0
#set up the plot
plot.new()
plot.window(xlim=c(1,100), ylim=c(0,1000))
#plot twitter original data source
lines(1:prev.len, twit.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=461)
#plot twitter validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),twit.valid.mat[grid.ind,],lty=2,lwd=1.5,col=461)
#plot twitter predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),pred.mat[1,],lty=6,col=461)
#plot bicycle original data source
lines(1:prev.len, bicycle.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=312)
#plot bicycle validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), bicycle.valid.mat[grid.ind,],lty=2,lwd=1.5,col=312)
#plot bicycle predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), pred.mat[2,],lty=6,col=312)
#plot taxi original data source
lines(1:prev.len, taxi.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=33)
#plot taxi validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),taxi.valid.mat[grid.ind,],lty=2,lwd=1.5,col=33)
#plot taxi predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),pred.mat[3,],lty=6,col=33)
axis(1)
axis(2)
box()
}
plot.predict.result(2)
plot.predict.result <- function(grid.ind){
prev.len = 48
pred.len = 24
train.len = ncol(twit.train.mat)
pred.mat = var.predict.grid(grid.ind,pred.len,1)
pred.mat[which(pred.mat<0)] = 0
#set up the plot
plot.new()
plot.window(xlim=c(1,100), ylim=c(0,1000))
#plot twitter original data source
lines(1:prev.len, twit.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=461)
#plot twitter validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),twit.valid.mat[grid.ind,],lty=2,col=461)
#plot twitter predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),pred.mat[1,],lty=6,col=461)
#plot bicycle original data source
lines(1:prev.len, bicycle.train.mat[grid.ind, (train.len-prev.len+1):train.len],col="red")
#plot bicycle validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), bicycle.valid.mat[grid.ind,],lty=2,col="red")
#plot bicycle predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), pred.mat[2,],lty=6,col="red")
#plot taxi original data source
lines(1:prev.len, taxi.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=33)
#plot taxi validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),taxi.valid.mat[grid.ind,],lty=2,col=33)
#plot taxi predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),pred.mat[3,],lty=6,col=33)
axis(1)
axis(2)
box()
}
plot.predict.result(2)
plot.predict.result <- function(grid.ind){
prev.len = 48
pred.len = 24
train.len = ncol(twit.train.mat)
pred.mat = var.predict.grid(grid.ind,pred.len,1)
pred.mat[which(pred.mat<0)] = 0
#set up the plot
plot.new()
plot.window(xlim=c(1,100), ylim=c(0,1000))
#plot twitter original data source
lines(1:prev.len, twit.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=461)
#plot twitter validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),twit.valid.mat[grid.ind,],lty=2,col=461)
#plot twitter predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),pred.mat[1,],lty=6,col=461)
#plot bicycle original data source
lines(1:prev.len, bicycle.train.mat[grid.ind, (train.len-prev.len+1):train.len],col="red")
#plot bicycle validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), bicycle.valid.mat[grid.ind,],lty=2,col="red")
#plot bicycle predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), pred.mat[2,],lty=6,col="red")
#plot taxi original data source
lines(1:prev.len, taxi.train.mat[grid.ind, (train.len-prev.len+1):train.len],col="blue")
#plot taxi validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),taxi.valid.mat[grid.ind,],lty=2,col="blue")
#plot taxi predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),pred.mat[3,],lty=6,col="blue")
axis(1)
axis(2)
box()
}
plot.predict.result(2)
plot.predict.result <- function(grid.ind){
prev.len = 48
pred.len = 24
train.len = ncol(twit.train.mat)
pred.mat = var.predict.grid(grid.ind,pred.len,1)
pred.mat[which(pred.mat<0)] = 0
#set up the plot
plot.new()
plot.window(xlim=c(1,100), ylim=c(0,1000))
#plot twitter original data source
lines(1:prev.len, twit.train.mat[grid.ind, (train.len-prev.len+1):train.len],col="blue")
#plot twitter validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),twit.valid.mat[grid.ind,],lty=2,col="blue")
#plot twitter predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),pred.mat[1,],lty=6,col="blue")
#plot bicycle original data source
lines(1:prev.len, bicycle.train.mat[grid.ind, (train.len-prev.len+1):train.len],col="red")
#plot bicycle validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), bicycle.valid.mat[grid.ind,],lty=2,col="red")
#plot bicycle predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len), pred.mat[2,],lty=6,col="red")
#plot taxi original data source
lines(1:prev.len, taxi.train.mat[grid.ind, (train.len-prev.len+1):train.len],col=33)
#plot taxi validated data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),taxi.valid.mat[grid.ind,],lty=2,col=33)
#plot taxi predicted data(1 by 1 hour)
lines((prev.len+1):(prev.len+pred.len),pred.mat[3,],lty=6,col=33)
axis(1)
axis(2)
box()
}
plot.predict.result(2)
